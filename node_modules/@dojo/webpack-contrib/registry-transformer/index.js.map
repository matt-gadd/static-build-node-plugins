{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["import * as ts from 'typescript';\nimport * as path from 'path';\nconst shared = require('./shared');\n\nconst dImportPath = '@dojo/framework/widget-core/d';\nconst wPragma = 'w';\nconst fakeComponentName = 'Loadable__';\nconst outletImportPath = '@dojo/framework/routing/Outlet';\nconst outletRendererName = 'renderer';\nconst outletIdName = 'id';\nconst outletName = 'Outlet';\n\ninterface VisitorOptions {\n\tcontext: ts.TransformationContext;\n\troot: ts.SourceFile;\n\tcontextPath: string;\n\tbasePath: string;\n\tbundlePaths: string[];\n\tlegacyModule: boolean;\n\tall: boolean;\n\toutlets: string[];\n\tsync: boolean;\n}\n\nfunction createArrowFuncForDefaultImport(modulePath: string) {\n\treturn ts.createCall((ts as any).createSignatureDeclaration(ts.SyntaxKind.ImportKeyword), undefined, [\n\t\tts.createLiteral(`${modulePath}`)\n\t]);\n}\n\nclass Visitor {\n\tprivate context: ts.TransformationContext;\n\tprivate contextPath: string;\n\tprivate basePath: string;\n\tprivate bundlePaths: string[];\n\tprivate wPragma: undefined | string;\n\tprivate outletName: undefined | string;\n\tprivate modulesMap = new Map<string, string>();\n\tprivate ctorCountMap = new Map<string, number>();\n\tprivate needsLoadable = false;\n\tprivate all = false;\n\tprivate outlets: string[] = [];\n\tprivate registryItems: any = {};\n\tprivate sync = false;\n\n\tconstructor(options: VisitorOptions) {\n\t\tthis.context = options.context;\n\t\tthis.contextPath = options.contextPath;\n\t\tthis.bundlePaths = options.bundlePaths;\n\t\tthis.basePath = options.basePath;\n\t\tthis.all = options.all;\n\t\tthis.outlets = options.outlets;\n\t\tthis.sync = options.sync;\n\t}\n\n\tpublic visit(node: ts.Node) {\n\t\tif (ts.isImportDeclaration(node)) {\n\t\t\tconst importPath = (node.moduleSpecifier as ts.StringLiteral).text;\n\t\t\tif (importPath.match(/^(\\.|\\.\\.)/)) {\n\t\t\t\tthis.setLazyImport(node);\n\t\t\t} else if (dImportPath === importPath) {\n\t\t\t\tthis.setWPragma(node);\n\t\t\t} else if (outletImportPath === importPath) {\n\t\t\t\tthis.setOutletName(node);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isWCall(node)) {\n\t\t\tconst text = node.arguments[0].getText();\n\t\t\tif (this.modulesMap.get(text)) {\n\t\t\t\tnode = this.replaceWidgetClassWithString(node);\n\t\t\t}\n\t\t}\n\n\t\tif (ts.isJsxElement(node) || ts.isJsxSelfClosingElement(node)) {\n\t\t\tnode = this.replaceTSXElementWithLoadable(node);\n\t\t}\n\t\treturn ts.visitEachChild(node, this.visit.bind(this), this.context);\n\t}\n\n\tpublic end(node: ts.SourceFile) {\n\t\tlet statements = [...node.statements];\n\n\t\tif (Object.keys(this.registryItems).length) {\n\t\t\tconst registryItems = Object.keys(this.registryItems).map((label) => {\n\t\t\t\tconst modulePath = this.registryItems[label];\n\t\t\t\tif (!this.sync) {\n\t\t\t\t\tconst importCall = createArrowFuncForDefaultImport(modulePath);\n\t\t\t\t\treturn ts.createPropertyAssignment(\n\t\t\t\t\t\tlabel,\n\t\t\t\t\t\tts.createArrowFunction(undefined, undefined, [], undefined, undefined, importCall)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn ts.createPropertyAssignment(label, ts.createIdentifier(label));\n\t\t\t});\n\n\t\t\tconst registryStmt = ts.createVariableStatement(\n\t\t\t\tundefined,\n\t\t\t\tts.createVariableDeclarationList([\n\t\t\t\t\tts.createVariableDeclaration(\n\t\t\t\t\t\t'__autoRegistryItems',\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tts.createObjectLiteral(registryItems, false)\n\t\t\t\t\t)\n\t\t\t\t])\n\t\t\t);\n\n\t\t\tlet index = 0;\n\t\t\tfor (let i = 0; i < statements.length; i++) {\n\t\t\t\tif (!ts.isImportDeclaration(statements[i])) {\n\t\t\t\t\tindex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstatements.splice(index, 0, registryStmt);\n\t\t\tif (!this.sync) {\n\t\t\t\tstatements = this.removeImportStatements(statements);\n\t\t\t}\n\t\t}\n\n\t\tif (this.needsLoadable) {\n\t\t\tconst obj = ts.createObjectLiteral([\n\t\t\t\tts.createPropertyAssignment(ts.createIdentifier('type'), ts.createLiteral('registry'))\n\t\t\t]);\n\t\t\tconst decl = ts.createVariableDeclaration(fakeComponentName, undefined, obj);\n\t\t\tconst stmt = ts.createVariableStatement(undefined, [decl]);\n\n\t\t\tlet index = 0;\n\t\t\tfor (let i = 0; i < statements.length; i++) {\n\t\t\t\tif (!ts.isImportDeclaration(statements[i])) {\n\t\t\t\t\tindex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstatements.splice(index, 0, stmt);\n\t\t}\n\n\t\treturn ts.updateSourceFileNode(node, [...statements]);\n\t}\n\n\tprivate setLazyImport(node: ts.ImportDeclaration) {\n\t\tconst importPath = (node.moduleSpecifier as ts.StringLiteral).text;\n\t\tconst importClause = node.importClause;\n\t\tif (importClause && importClause.name && importClause.name.text) {\n\t\t\tthis.modulesMap.set(importClause.name.text, importPath);\n\t\t}\n\t}\n\n\tprivate setOutletName(node: ts.ImportDeclaration) {\n\t\tif (node.importClause) {\n\t\t\tconst importClause = node.importClause;\n\t\t\tif (importClause && importClause.name && importClause.name.text) {\n\t\t\t\tthis.outletName = importClause.name.text;\n\t\t\t} else if (importClause.namedBindings) {\n\t\t\t\tconst namedBindings = importClause.namedBindings as ts.NamedImports;\n\t\t\t\tnamedBindings.elements.some((element: ts.ImportSpecifier) => {\n\t\t\t\t\tconst text = element.name.getText();\n\t\t\t\t\tif (\n\t\t\t\t\t\ttext === outletName ||\n\t\t\t\t\t\t(element.propertyName && element.propertyName.escapedText === outletName)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.outletName = text;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate setWPragma(node: ts.ImportDeclaration) {\n\t\tif (node.importClause) {\n\t\t\tconst namedBindings = node.importClause.namedBindings as ts.NamedImports;\n\t\t\tnamedBindings.elements.some((element: ts.ImportSpecifier) => {\n\t\t\t\tconst text = element.name.getText();\n\t\t\t\tif (text === wPragma || (element.propertyName && element.propertyName.escapedText === wPragma)) {\n\t\t\t\t\tthis.wPragma = text;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate replaceTSXElementWithLoadable(inputNode: ts.JsxSelfClosingElement | ts.JsxElement) {\n\t\tlet node: ts.JsxOpeningLikeElement;\n\t\tif (ts.isJsxElement(inputNode)) {\n\t\t\tnode = inputNode.openingElement;\n\t\t} else {\n\t\t\tnode = inputNode;\n\t\t}\n\t\tconst text = node.tagName.getText();\n\t\tconst importPath = this.modulesMap.get(text) as string;\n\t\tthis.ctorCountMap.set(text, (this.ctorCountMap.get(text) || 0) + 1);\n\t\tif (importPath) {\n\t\t\tconst targetPath = path.posix\n\t\t\t\t.resolve(this.contextPath, importPath)\n\t\t\t\t.replace(`${this.basePath}${path.posix.sep}`, '');\n\n\t\t\tthis.log(text, targetPath);\n\t\t\tconst outletName = this.outletName ? this.getOutletName(node) : undefined;\n\t\t\tif (\n\t\t\t\tthis.all ||\n\t\t\t\tthis.bundlePaths.indexOf(targetPath) !== -1 ||\n\t\t\t\t(outletName && this.outlets.indexOf(outletName) !== -1)\n\t\t\t) {\n\t\t\t\tthis.registryItems[text] = this.modulesMap.get(text) as string;\n\t\t\t\tconst registryItem = ts.createPropertyAccess(\n\t\t\t\t\tts.createIdentifier('__autoRegistryItems'),\n\t\t\t\t\tts.createIdentifier(text)\n\t\t\t\t);\n\t\t\t\tconst registryExpr = ts.createObjectLiteral([\n\t\t\t\t\tts.createPropertyAssignment(\n\t\t\t\t\t\tts.createIdentifier('label'),\n\t\t\t\t\t\tts.createLiteral(`__autoRegistryItem_${text}`)\n\t\t\t\t\t),\n\t\t\t\t\tts.createPropertyAssignment(ts.createIdentifier('registryItem'), registryItem)\n\t\t\t\t]);\n\t\t\t\tconst registryAttribute = ts.createJsxAttribute(\n\t\t\t\t\tts.createIdentifier('__autoRegistryItem'),\n\t\t\t\t\tts.createJsxExpression(undefined, registryExpr)\n\t\t\t\t);\n\t\t\t\tthis.setSharedModules(`__autoRegistryItem_${text}`, {\n\t\t\t\t\tpath: this.registryItems[text],\n\t\t\t\t\toutletName\n\t\t\t\t});\n\t\t\t\tconst attrs = ts.updateJsxAttributes(node.attributes, [\n\t\t\t\t\t...node.attributes.properties,\n\t\t\t\t\tregistryAttribute\n\t\t\t\t]);\n\t\t\t\tthis.needsLoadable = true;\n\t\t\t\tthis.ctorCountMap.set(text, (this.ctorCountMap.get(text) || 0) - 1);\n\t\t\t\tif (ts.isJsxElement(inputNode)) {\n\t\t\t\t\tlet openingElement;\n\n\t\t\t\t\tif (ts.updateJsxOpeningElement.length === 3) {\n\t\t\t\t\t\topeningElement = ts.updateJsxOpeningElement(\n\t\t\t\t\t\t\tnode as ts.JsxOpeningElement,\n\t\t\t\t\t\t\tts.createIdentifier(fakeComponentName),\n\t\t\t\t\t\t\tattrs\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\topeningElement = (ts as any).updateJsxOpeningElement(\n\t\t\t\t\t\t\tnode as ts.JsxOpeningElement,\n\t\t\t\t\t\t\tts.createIdentifier(fakeComponentName),\n\t\t\t\t\t\t\t(node as any).typeArguments,\n\t\t\t\t\t\t\tattrs\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tconst closingElement = ts.updateJsxClosingElement(\n\t\t\t\t\t\tinputNode.closingElement,\n\t\t\t\t\t\tts.createIdentifier(fakeComponentName)\n\t\t\t\t\t);\n\t\t\t\t\treturn ts.updateJsxElement(inputNode, openingElement, inputNode.children, closingElement);\n\t\t\t\t} else {\n\t\t\t\t\tif (ts.updateJsxSelfClosingElement.length === 3) {\n\t\t\t\t\t\treturn ts.updateJsxSelfClosingElement(inputNode, ts.createIdentifier(fakeComponentName), attrs);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn (ts as any).updateJsxSelfClosingElement(\n\t\t\t\t\t\t\tinputNode,\n\t\t\t\t\t\t\tts.createIdentifier(fakeComponentName),\n\t\t\t\t\t\t\t(inputNode as any).typeArguments,\n\t\t\t\t\t\t\tattrs\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn inputNode;\n\t}\n\n\tprivate setSharedModules(registryItemName: string, meta: { path: string; outletName: string | undefined }) {\n\t\tconst targetPath = path.posix\n\t\t\t.resolve(this.contextPath, meta.path)\n\t\t\t.replace(`${this.basePath}${path.posix.sep}`, '');\n\t\tshared.modules = shared.modules || {};\n\t\tshared.modules[registryItemName] = shared.modules[registryItemName] || { path: targetPath, outletName: [] };\n\t\tif (meta.outletName) {\n\t\t\tshared.modules[registryItemName].outletName.push(meta.outletName);\n\t\t}\n\t}\n\n\tprivate log(name: string, path: string) {\n\t\tshared.all = shared.all || {};\n\t\tshared.all[name] = path;\n\t}\n\n\tprivate replaceWidgetClassWithString(node: ts.CallExpression) {\n\t\tconst text = node.arguments[0].getText();\n\t\tconst importPath = this.modulesMap.get(text) as string;\n\t\tconst targetPath = path.posix\n\t\t\t.resolve(this.contextPath, importPath)\n\t\t\t.replace(`${this.basePath}${path.posix.sep}`, '');\n\n\t\tconst outletName = this.outletName ? this.getOutletName(node) : undefined;\n\t\tthis.ctorCountMap.set(text, (this.ctorCountMap.get(text) || 0) + 1);\n\t\tthis.log(text, targetPath);\n\t\tif (\n\t\t\tthis.all ||\n\t\t\tthis.bundlePaths.indexOf(targetPath) !== -1 ||\n\t\t\t(outletName && this.outlets.indexOf(outletName) !== -1)\n\t\t) {\n\t\t\tthis.ctorCountMap.set(text, (this.ctorCountMap.get(text) || 0) - 1);\n\t\t\tthis.registryItems[text] = this.modulesMap.get(text) as string;\n\t\t\tconst registryItem = ts.createPropertyAccess(\n\t\t\t\tts.createIdentifier('__autoRegistryItems'),\n\t\t\t\tts.createIdentifier(text)\n\t\t\t);\n\t\t\tconst registryExpr = ts.createObjectLiteral([\n\t\t\t\tts.createPropertyAssignment(\n\t\t\t\t\tts.createIdentifier('label'),\n\t\t\t\t\tts.createLiteral(`__autoRegistryItem_${text}`)\n\t\t\t\t),\n\t\t\t\tts.createPropertyAssignment(ts.createIdentifier('registryItem'), registryItem)\n\t\t\t]);\n\t\t\tthis.setSharedModules(`__autoRegistryItem_${text}`, { path: this.registryItems[text], outletName });\n\t\t\treturn ts.updateCall(node, node.expression, node.typeArguments, [registryExpr, ...node.arguments.slice(1)]);\n\t\t}\n\t\treturn node;\n\t}\n\n\tprivate removeImportStatements(nodes: ts.Statement[]) {\n\t\tconst importsToRemove: string[] = [];\n\t\tObject.keys(this.registryItems).forEach((label) => {\n\t\t\tif (this.ctorCountMap.get(label) === 0) {\n\t\t\t\timportsToRemove.push(this.registryItems[label]);\n\t\t\t}\n\t\t});\n\t\treturn nodes.filter((node: ts.Node) => {\n\t\t\tif (\n\t\t\t\tts.isImportDeclaration(node) &&\n\t\t\t\timportsToRemove.indexOf((node.moduleSpecifier as ts.StringLiteral).text) !== -1\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tprivate isWCall(node: ts.Node): node is ts.CallExpression {\n\t\treturn !!(\n\t\t\tthis.wPragma &&\n\t\t\tthis.modulesMap.size &&\n\t\t\tts.isCallExpression(node) &&\n\t\t\tnode.expression.getText() === this.wPragma &&\n\t\t\tnode.arguments &&\n\t\t\tnode.arguments.length\n\t\t);\n\t}\n\n\tprivate getOutletName(node: ts.Node): string | undefined {\n\t\tlet parent = node.parent;\n\t\twhile (parent) {\n\t\t\tif (\n\t\t\t\t(ts.isMethodDeclaration(parent) || ts.isPropertyAssignment(parent)) &&\n\t\t\t\tparent.name.getText() === outletRendererName\n\t\t\t) {\n\t\t\t\tconst w = parent.parent!.parent as ts.Node;\n\t\t\t\tif (\n\t\t\t\t\tts.isCallExpression(w) &&\n\t\t\t\t\tw.expression.getText() === this.wPragma &&\n\t\t\t\t\tts.isIdentifier(w.arguments[0]) &&\n\t\t\t\t\tw.arguments[0].getText() === this.outletName &&\n\t\t\t\t\tts.isObjectLiteralExpression(w.arguments[1])\n\t\t\t\t) {\n\t\t\t\t\tconst objectLiteral = w.arguments[1] as ts.ObjectLiteralExpression;\n\t\t\t\t\tfor (let i = 0; i < objectLiteral.properties.length; i++) {\n\t\t\t\t\t\tconst property = objectLiteral.properties[i];\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tts.isPropertyAssignment(property) &&\n\t\t\t\t\t\t\tproperty.name.getText() === outletIdName &&\n\t\t\t\t\t\t\tts.isStringLiteral(property.initializer)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn property.initializer.text;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (ts.isJsxAttribute(parent) && parent.name.getText() === outletRendererName) {\n\t\t\t\tconst tsx = parent.parent!.parent as ts.JsxOpeningLikeElement;\n\t\t\t\tif (ts.isJsxOpeningLikeElement(tsx) && tsx.tagName.getText() === this.outletName) {\n\t\t\t\t\tconst properties = tsx.attributes.properties;\n\t\t\t\t\tfor (let i = 0; i < properties.length; i++) {\n\t\t\t\t\t\tconst attribute = properties[i] as ts.JsxAttribute;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tattribute.name.getText() === outletIdName &&\n\t\t\t\t\t\t\tattribute.initializer &&\n\t\t\t\t\t\t\tts.isStringLiteral(attribute.initializer)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn attribute.initializer.text;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tparent = parent.parent;\n\t\t}\n\t\treturn undefined;\n\t}\n}\n\nconst registryTransformer = function(\n\tthis: { basePath: string; bundlePaths: string[]; all: boolean; outlets: string[]; sync: boolean },\n\tcontext: ts.TransformationContext\n) {\n\tconst basePath = this.basePath;\n\tconst bundlePaths = this.bundlePaths;\n\tconst all = this.all;\n\tconst outlets = this.outlets;\n\tconst opts = context.getCompilerOptions();\n\tconst sync = this.sync;\n\tconst { module } = opts;\n\tconst legacyModule =\n\t\tmodule === ts.ModuleKind.CommonJS || module === ts.ModuleKind.AMD || module === ts.ModuleKind.UMD;\n\treturn function(node: ts.SourceFile) {\n\t\tconst root = node;\n\t\tconst contextPath = path.dirname(path.relative(basePath, node.getSourceFile().fileName));\n\t\tconst visitor = new Visitor({\n\t\t\tcontext,\n\t\t\tcontextPath,\n\t\t\tbundlePaths,\n\t\t\tbasePath,\n\t\t\tlegacyModule,\n\t\t\troot,\n\t\t\tall,\n\t\t\toutlets,\n\t\t\tsync\n\t\t});\n\t\tlet result = ts.visitNode(node, visitor.visit.bind(visitor));\n\t\treturn visitor.end(result);\n\t};\n};\n\nexport default (\n\tbasePath: string,\n\tbundlePaths: string[],\n\tall: boolean = false,\n\toutlets: string[] = [],\n\tsync: boolean = false\n) => registryTransformer.bind({ bundlePaths, basePath, all, outlets, sync });\n"]}