{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["import { loader } from 'webpack';\nimport { createInstrumenter } from 'istanbul-lib-instrument';\nimport { getOptions } from 'loader-utils';\nimport { RawSourceMap, MappedPosition, MappingItem, SourceMapConsumer, SourceMapGenerator } from 'source-map';\n\n/**\n * Instrument a source file with istanbul for code coverage.\n *\n * Instrumenter options will be read from the project 'intern.json' file.\n *\n * @param content the source code\n * @param sourceMap an optional source map\n */\nexport default <loader.Loader>function(source: string | Buffer, sourceMap?: any) {\n\tconst callback = this.async()!;\n\tconst options = ({ ...getOptions(this) } || {}) as any;\n\n\tconst _sourceMap = <RawSourceMap>sourceMap;\n\tconst instrumenterOptions = {\n\t\tproduceSourceMap: true,\n\t\t...(options.instrumenterOptions || {})\n\t};\n\n\tif (options.coverageVariable) {\n\t\tinstrumenterOptions.coverageVariable = options.coverageVariable;\n\t}\n\n\tconst instrumenter = createInstrumenter(instrumenterOptions);\n\n\t// For the code coverage to work we need to modify the sources in the\n\t// source map to point back to the original file. The files coming in have\n\t// been generated by webpack and look like,\n\t// \"node_modules/tslint-loader?!path/to/file/css-modules!path/to/file.ts.\n\t// We need these files to simply be \"path/to/file.ts\".\n\tif (_sourceMap) {\n\t\t_sourceMap.sources = (_sourceMap.sources || []).map((source) => {\n\t\t\tconst lastBang = source.lastIndexOf('!');\n\t\t\tif (lastBang !== -1) {\n\t\t\t\treturn source.substr(lastBang + 1);\n\t\t\t}\n\t\t\treturn source;\n\t\t});\n\t}\n\n\tinstrumenter.instrument(\n\t\tString(source),\n\t\tthis.resourcePath,\n\t\t(error, instrumentedSource) => {\n\t\t\tif (error) {\n\t\t\t\tcallback(error);\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tconst instrumentedSourceMap = instrumenter.lastSourceMap();\n\t\t\t\t\tlet updatedSourceMap: RawSourceMap;\n\t\t\t\t\tif (_sourceMap) {\n\t\t\t\t\t\tupdatedSourceMap = mergeSourceMaps(instrumentedSourceMap, _sourceMap);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tupdatedSourceMap = instrumentedSourceMap;\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback(null, instrumentedSource, <any>updatedSourceMap);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tcallback(err);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t_sourceMap\n\t);\n};\n\n/**\n * Merge a list of source maps generated through successive transforms of a\n * single file.\n *\n * Maps should be in reverse order (i.e., the first map should be\n * from the most recent transform).\n *\n * @param maps an array of raw source maps in order from the most recently\n * generated map to the original map\n * @returns a source map that maps locations in the final transformed file to\n * the original file\n */\nfunction mergeSourceMaps(...maps: RawSourceMap[]) {\n\tconst consumers = maps.map((map) => new SourceMapConsumer(map));\n\tconst generator = new SourceMapGenerator({ file: maps[0].file });\n\n\t// Walk through each mapping of the most recent source map\n\tconsumers[0].eachMapping((mapping) => {\n\t\tconst original = getOriginalPosition(consumers, mapping);\n\t\tif (original.line !== null) {\n\t\t\tgenerator.addMapping({\n\t\t\t\tgenerated: {\n\t\t\t\t\tline: mapping.generatedLine,\n\t\t\t\t\tcolumn: mapping.generatedColumn!\n\t\t\t\t},\n\t\t\t\toriginal: {\n\t\t\t\t\tline: original.line,\n\t\t\t\t\tcolumn: original.column!\n\t\t\t\t},\n\t\t\t\tsource: mapping.source!,\n\t\t\t\tname: mapping.name\n\t\t\t});\n\t\t}\n\t});\n\n\treturn <RawSourceMap>JSON.parse(generator.toString());\n}\n\n/**\n * Find the original position for a given position.\n *\n * @param consumers a list of source map consumers, from the most recently\n * generated to the original\n * @param mapping a mapping item from the most recent source map\n * @returns a position in the original file\n */\nfunction getOriginalPosition(consumers: SourceMapConsumer[], mapping: MappingItem) {\n\treturn consumers.reduce(\n\t\t(original, consumer) => {\n\t\t\t// Ignore missing mappings\n\t\t\tif (isMappedPosition(original)) {\n\t\t\t\treturn consumer.originalPositionFor(original);\n\t\t\t}\n\t\t\treturn original;\n\t\t},\n\t\t{\n\t\t\tline: mapping.generatedLine,\n\t\t\tcolumn: mapping.generatedColumn\n\t\t}\n\t);\n}\n\n/**\n * Indicate whether the given value is a MappedPosition\n */\nfunction isMappedPosition(position: any): position is MappedPosition {\n\treturn position.line != null && position.column != null && position.source != null;\n}\n"]}