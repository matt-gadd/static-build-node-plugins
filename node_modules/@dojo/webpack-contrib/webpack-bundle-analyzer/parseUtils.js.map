{"version":3,"file":"parseUtils.js","sourceRoot":"","sources":["parseUtils.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from 'fs';\nimport * as _ from 'lodash';\nimport * as acorn from 'acorn';\nconst walk = require('acorn/dist/walk');\n\nexport function parseBundle(bundlePath: any) {\n\tconst content = fs.readFileSync(bundlePath, 'utf8');\n\tconst ast = acorn.parse(content, { sourceType: 'script', ecmaVersion: 2017 });\n\tconst walkState = {\n\t\tlocations: null\n\t};\n\n\twalk.recursive(ast, walkState, {\n\t\tCallExpression(node: any, state: any, c: any) {\n\t\t\tif (state.sizes) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst args = node.arguments;\n\t\t\tif (\n\t\t\t\tnode.callee.type === 'Identifier' &&\n\t\t\t\targs.length >= 2 &&\n\t\t\t\tisArgumentContainsChunkIds(args[0]) &&\n\t\t\t\tisArgumentContainsModulesList(args[1])\n\t\t\t) {\n\t\t\t\tstate.locations = getModulesLocationFromFunctionArgument(args[1]);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tnode.callee.type === 'Identifier' &&\n\t\t\t\t(args.length === 2 || args.length === 3) &&\n\t\t\t\tisArgumentContainsChunkIds(args[0]) &&\n\t\t\t\tisArgumentArrayConcatContainingChunks(args[1])\n\t\t\t) {\n\t\t\t\tstate.locations = getModulesLocationFromArrayConcat(args[1]);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tnode.callee.type === 'FunctionExpression' &&\n\t\t\t\t!node.callee.id &&\n\t\t\t\targs.length === 1 &&\n\t\t\t\tisArgumentContainsModulesList(args[0])\n\t\t\t) {\n\t\t\t\tstate.locations = getModulesLocationFromFunctionArgument(args[0]);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tisWindowPropertyPushExpression(node) &&\n\t\t\t\targs.length === 1 &&\n\t\t\t\tisArgumentContainingChunkIdsAndModulesList(args[0])\n\t\t\t) {\n\t\t\t\tstate.locations = getModulesLocationFromFunctionArgument(args[0].elements[1]);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.each(args, (arg) => c(arg, state));\n\t\t}\n\t});\n\n\tif (!walkState.locations) {\n\t\treturn null;\n\t}\n\n\treturn {\n\t\tsrc: content,\n\t\tmodules: _.mapValues(walkState.locations, (loc: any) => content.slice(loc.start, loc.end))\n\t};\n}\n\nfunction isArgumentContainsChunkIds(arg: any) {\n\treturn arg.type === 'ArrayExpression' && _.every(arg.elements, isModuleId);\n}\n\nfunction isArgumentContainsModulesList(arg: any) {\n\tif (arg.type === 'ObjectExpression') {\n\t\treturn _(arg.properties)\n\t\t\t.map('value')\n\t\t\t.every(isModuleWrapper);\n\t}\n\n\tif (arg.type === 'ArrayExpression') {\n\t\treturn _.every(arg.elements, (elem) => !elem || isModuleWrapper(elem));\n\t}\n\n\treturn false;\n}\n\nfunction isArgumentContainingChunkIdsAndModulesList(arg: any) {\n\tif (\n\t\targ.type === 'ArrayExpression' &&\n\t\targ.elements.length >= 2 &&\n\t\tisArgumentContainsChunkIds(arg.elements[0]) &&\n\t\tisArgumentContainsModulesList(arg.elements[1])\n\t) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction isArgumentArrayConcatContainingChunks(arg: any) {\n\tif (\n\t\targ.type === 'CallExpression' &&\n\t\targ.callee.type === 'MemberExpression' &&\n\t\targ.callee.object.type === 'CallExpression' &&\n\t\targ.callee.object.callee.type === 'Identifier' &&\n\t\targ.callee.object.callee.name === 'Array' &&\n\t\targ.callee.object.arguments.length === 1 &&\n\t\tisNumericId(arg.callee.object.arguments[0]) &&\n\t\targ.callee.property.type === 'Identifier' &&\n\t\targ.callee.property.name === 'concat' &&\n\t\targ.arguments.length === 1 &&\n\t\targ.arguments[0].type === 'ArrayExpression'\n\t) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nfunction isWindowPropertyPushExpression(node: any) {\n\treturn (\n\t\tnode.callee.type === 'MemberExpression' &&\n\t\tnode.callee.property.name === 'push' &&\n\t\tnode.callee.object.type === 'AssignmentExpression' &&\n\t\tnode.callee.object.left.object.name === 'window'\n\t);\n}\n\nfunction isModuleWrapper(node: any) {\n\treturn (\n\t\t((node.type === 'FunctionExpression' || node.type === 'ArrowFunctionExpression') && !node.id) ||\n\t\tisModuleId(node) ||\n\t\t(node.type === 'ArrayExpression' && node.elements.length > 1 && isModuleId(node.elements[0]))\n\t);\n}\n\nfunction isModuleId(node: any) {\n\treturn node.type === 'Literal' && (isNumericId(node) || typeof node.value === 'string');\n}\n\nfunction isNumericId(node: any) {\n\treturn node.type === 'Literal' && Number.isInteger(node.value) && node.value >= 0;\n}\n\nfunction getModulesLocationFromFunctionArgument(arg: any) {\n\tif (arg.type === 'ObjectExpression') {\n\t\tconst modulesNodes = arg.properties;\n\n\t\treturn _.transform(\n\t\t\tmodulesNodes,\n\t\t\t(result, moduleNode: any) => {\n\t\t\t\tconst moduleId = moduleNode.key.name || moduleNode.key.value;\n\n\t\t\t\tresult[moduleId] = getModuleLocation(moduleNode.value);\n\t\t\t},\n\t\t\t{}\n\t\t);\n\t}\n\n\tif (arg.type === 'ArrayExpression') {\n\t\tconst modulesNodes = arg.elements;\n\n\t\treturn _.transform(\n\t\t\tmodulesNodes,\n\t\t\t(result, moduleNode, i) => {\n\t\t\t\tif (!moduleNode) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresult[i] = getModuleLocation(moduleNode);\n\t\t\t},\n\t\t\t{}\n\t\t);\n\t}\n\n\treturn {};\n}\n\nfunction getModulesLocationFromArrayConcat(arg: any) {\n\tconst minId = arg.callee.object.arguments[0].value;\n\tconst modulesNodes = arg.arguments[0].elements;\n\n\treturn _.transform(\n\t\tmodulesNodes,\n\t\t(result, moduleNode, i) => {\n\t\t\tif (!moduleNode) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresult[i + minId] = getModuleLocation(moduleNode);\n\t\t},\n\t\t{}\n\t);\n}\n\nfunction getModuleLocation(node: any) {\n\treturn _.pick(node, 'start', 'end');\n}\n"]}