{"version":3,"file":"ConcatenatedModule.js","sourceRoot":"","sources":["ConcatenatedModule.ts"],"names":[],"mappings":";;AAAA,4BAA4B;AAE5B,qCAA8B;AAC9B,mDAA4C;AAC5C,mDAA4C;AAC5C,mCAA6C;AAG7C,wBAAwC,SAAQ,gBAAM;IAGrD,YAAY,IAAY,EAAE,IAAS,EAAE,MAAiB;QACrD,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;QAC1B,IAAI,CAAC,IAAI,IAAI,iBAAiB,CAAC;QAC/B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC3B,CAAC;IAED,kBAAkB;QACjB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,UAAe,EAAE,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC,CAAC;IACnF,CAAC;IAED,gBAAgB,CAAC,UAAe;QAC/B,MAAM,SAAS,GAAG,0BAAkB,CAAC,UAAU,CAAC,CAAC;QAEjD,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC;QACR,CAAC;QAED,MAAM,CAAC,OAAO,EAAE,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QACxE,IAAI,aAAa,GAAG,IAAI,CAAC;QAEzB,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,UAAe,EAAE,EAAE;YACnC,IAAI,WAAW,GAAG,aAAa,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;YAErD,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBAClB,WAAW,GAAG,aAAa,CAAC,cAAc,CAAC,IAAI,uBAAa,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;YACjF,CAAC;YAED,aAAa,GAAG,WAAW,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,MAAM,MAAM,GAAG,IAAI,uBAAa,CAAC,QAAQ,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;QAC7D,aAAa,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;IACtC,CAAC;IAED,QAAQ,CAAC,IAAS;QACjB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;IAED,cAAc,CAAC,MAAW;QACzB,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;IACrC,CAAC;IAED,cAAc,CAAC,MAAW;QACzB,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;QACpC,MAAM,CAAC,MAAM,CAAC;IACf,CAAC;IAED,WAAW;QACV,MAAM,mBACF,KAAK,CAAC,WAAW,EAAE,IACtB,YAAY,EAAE,IAAI,EAClB,MAAM,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,aAAa,CAAC,IAChD;IACH,CAAC;CACD;AA5DD,qCA4DC","sourcesContent":["import * as _ from 'lodash';\n\nimport Module from './Module';\nimport ContentModule from './ContentModule';\nimport ContentFolder from './ContentFolder';\nimport { getModulePathParts } from './utils';\nimport BaseNode from './Node';\n\nexport default class ConcatenatedModule extends Module {\n\tprivate children: any;\n\n\tconstructor(name: string, data: any, parent?: BaseNode) {\n\t\tsuper(name, data, parent);\n\t\tthis.name += ' (concatenated)';\n\t\tthis.children = Object.create(null);\n\t\tthis.fillContentModules();\n\t}\n\n\tfillContentModules() {\n\t\t_.each(this.data.modules, (moduleData: any) => this.addContentModule(moduleData));\n\t}\n\n\taddContentModule(moduleData: any) {\n\t\tconst pathParts = getModulePathParts(moduleData);\n\n\t\tif (!pathParts) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst [folders, fileName] = [pathParts.slice(0, -1), _.last(pathParts)];\n\t\tlet currentFolder = this;\n\n\t\t_.each(folders, (folderName: any) => {\n\t\t\tlet childFolder = currentFolder.getChild(folderName);\n\n\t\t\tif (!childFolder) {\n\t\t\t\tchildFolder = currentFolder.addChildFolder(new ContentFolder(folderName, this));\n\t\t\t}\n\n\t\t\tcurrentFolder = childFolder;\n\t\t});\n\n\t\tconst module = new ContentModule(fileName, moduleData, this);\n\t\tcurrentFolder.addChildModule(module);\n\t}\n\n\tgetChild(name: any) {\n\t\treturn this.children[name];\n\t}\n\n\taddChildModule(module: any) {\n\t\tmodule.parent = this;\n\t\tthis.children[module.name] = module;\n\t}\n\n\taddChildFolder(folder: any) {\n\t\tfolder.parent = this;\n\t\tthis.children[folder.name] = folder;\n\t\treturn folder;\n\t}\n\n\ttoChartData() {\n\t\treturn {\n\t\t\t...super.toChartData(),\n\t\t\tconcatenated: true,\n\t\t\tgroups: _.invokeMap(this.children, 'toChartData')\n\t\t};\n\t}\n}\n"]}