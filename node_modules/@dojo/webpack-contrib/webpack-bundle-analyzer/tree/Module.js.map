{"version":3,"file":"Module.js","sourceRoot":"","sources":["Module.ts"],"names":[],"mappings":";;AAAA,4BAA4B;AAC5B,sCAAsC;AAEtC,iCAA8B;AAE9B,YAA4B,SAAQ,cAAQ;IAI3C,YAAY,IAAY,EAAE,IAAS,EAAE,MAAiB;QACrD,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IAClB,CAAC;IAED,IAAI,GAAG;QACN,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;IAC5B,CAAC;IAED,IAAI,GAAG,CAAC,KAAK;QACZ,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAC5B,OAAO,IAAI,CAAC,SAAS,CAAC;IACvB,CAAC;IAED,IAAI,IAAI;QACP,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;IACvB,CAAC;IAED,IAAI,IAAI,CAAC,KAAK;QACb,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;IACxB,CAAC;IAED,IAAI,UAAU;QACb,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC;IAC/C,CAAC;IAED,IAAI,QAAQ;QACX,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;QACjE,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IACvB,CAAC;IAED,SAAS,CAAC,IAAS;QAClB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC;QACxB,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;QAC9C,CAAC;IACF,CAAC;IAED,WAAW;QACV,MAAM,CAAC;YACN,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE;YAChB,KAAK,EAAE,IAAI,CAAC,IAAI;YAChB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,QAAQ,EAAE,IAAI,CAAC,IAAI;YACnB,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACvB,CAAC;IACH,CAAC;CACD;AA1DD,yBA0DC","sourcesContent":["import * as _ from 'lodash';\nimport * as gzipSize from 'gzip-size';\n\nimport BaseNode from './Node';\n\nexport default class Module extends BaseNode {\n\tpublic data: any;\n\tprivate _gzipSize: any;\n\n\tconstructor(name: string, data: any, parent?: BaseNode) {\n\t\tsuper(name, parent);\n\t\tthis.data = data;\n\t}\n\n\tget src() {\n\t\treturn this.data.parsedSrc;\n\t}\n\n\tset src(value) {\n\t\tthis.data.parsedSrc = value;\n\t\tdelete this._gzipSize;\n\t}\n\n\tget size() {\n\t\treturn this.data.size;\n\t}\n\n\tset size(value) {\n\t\tthis.data.size = value;\n\t}\n\n\tget parsedSize() {\n\t\treturn this.src ? this.src.length : undefined;\n\t}\n\n\tget gzipSize() {\n\t\tif (!_.has(this, '_gzipSize')) {\n\t\t\tthis._gzipSize = this.src ? gzipSize.sync(this.src) : undefined;\n\t\t}\n\n\t\treturn this._gzipSize;\n\t}\n\n\tmergeData(data: any) {\n\t\tif (data.size) {\n\t\t\tthis.size += data.size;\n\t\t}\n\n\t\tif (data.parsedSrc) {\n\t\t\tthis.src = (this.src || '') + data.parsedSrc;\n\t\t}\n\t}\n\n\ttoChartData() {\n\t\treturn {\n\t\t\tid: this.data.id,\n\t\t\tlabel: this.name,\n\t\t\tpath: this.path,\n\t\t\tstatSize: this.size,\n\t\t\tparsedSize: this.parsedSize,\n\t\t\tgzipSize: this.gzipSize\n\t\t};\n\t}\n}\n"]}