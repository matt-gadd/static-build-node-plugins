{"version":3,"file":"analyzer.js","sourceRoot":"","sources":["analyzer.ts"],"names":[],"mappings":"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","sourcesContent":["import * as path from 'path';\nimport * as _ from 'lodash';\nimport * as gzipSize from 'gzip-size';\nimport Folder from './tree/Folder';\nimport { parseBundle } from './parseUtils';\n\nconst FILENAME_QUERY_REGEXP = /\\?.*$/;\n\nexport function getViewerData(bundleStats: any, bundleDir?: string | null) {\n\tif (_.isEmpty(bundleStats.assets) && !_.isEmpty(bundleStats.children)) {\n\t\tbundleStats = bundleStats.children[0];\n\t}\n\n\tbundleStats.assets = _.filter(bundleStats.assets, (asset) => {\n\t\tasset.name = asset.name.replace(FILENAME_QUERY_REGEXP, '');\n\t\treturn _.endsWith(asset.name, '.js') && !_.isEmpty(asset.chunks);\n\t});\n\n\tlet bundlesSources: any = null;\n\tlet parsedModules: any = null;\n\n\tif (bundleDir) {\n\t\tbundlesSources = {};\n\t\tparsedModules = {};\n\n\t\tfor (const statAsset of bundleStats.assets) {\n\t\t\tconst assetFile = path.join(bundleDir, statAsset.name);\n\t\t\tlet bundleInfo;\n\n\t\t\ttry {\n\t\t\t\tbundleInfo = parseBundle(assetFile);\n\t\t\t} catch (err) {\n\t\t\t\tbundleInfo = null;\n\t\t\t}\n\n\t\t\tif (!bundleInfo) {\n\t\t\t\tparsedModules = null;\n\t\t\t\tbundlesSources = null;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tbundlesSources[statAsset.name] = bundleInfo.src;\n\t\t\t_.assign(parsedModules, bundleInfo.modules);\n\t\t}\n\t}\n\n\tconst assets = _.transform(\n\t\tbundleStats.assets,\n\t\t(result: any, statAsset: any) => {\n\t\t\tconst asset: any = (result[statAsset.name] = _.pick(statAsset, 'size'));\n\n\t\t\tif (bundlesSources) {\n\t\t\t\tasset.parsedSize = bundlesSources[statAsset.name].length;\n\t\t\t\tasset.gzipSize = gzipSize.sync(bundlesSources[statAsset.name]);\n\t\t\t}\n\n\t\t\tasset.modules = _(bundleStats.modules)\n\t\t\t\t.filter((statModule) => assetHasModule(statAsset, statModule))\n\t\t\t\t.each((statModule) => {\n\t\t\t\t\tif (parsedModules) {\n\t\t\t\t\t\tstatModule.parsedSrc = parsedModules[statModule.id];\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\tasset.tree = createModulesTree(asset.modules);\n\t\t},\n\t\t{}\n\t);\n\n\treturn _.transform(\n\t\tassets,\n\t\t(result: any, asset: any, filename: any) => {\n\t\t\tresult.push({\n\t\t\t\tlabel: filename,\n\t\t\t\tstatSize: asset.tree.size,\n\t\t\t\tparsedSize: asset.parsedSize,\n\t\t\t\tgzipSize: asset.gzipSize,\n\t\t\t\tgroups: _.invokeMap(asset.tree.children, 'toChartData')\n\t\t\t});\n\t\t},\n\t\t[]\n\t);\n}\n\nfunction assetHasModule(statAsset: any, statModule: any) {\n\treturn _.some(statModule.chunks, (moduleChunk) => _.includes(statAsset.chunks, moduleChunk));\n}\n\nfunction createModulesTree(modules: any) {\n\tconst root = new Folder('.');\n\n\t_.each(modules, (module) => root.addModule(module));\n\n\treturn root;\n}\n"]}