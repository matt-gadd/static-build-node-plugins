import { Compiler } from 'webpack';
export interface RenderResult {
    path?: string | BuildTimePath;
    html: string;
    styles: string;
    script: string;
}
export interface BuildTimePath {
    path: string;
    match: string[];
}
export interface BuildTimeRenderArguments {
    root: string;
    entries: string[];
    useManifest?: boolean;
    paths?: (BuildTimePath | string)[];
    useHistory?: boolean;
    puppeteerOptions?: any;
}
export default class BuildTimeRender {
    private _cssFiles;
    private _entries;
    private _head;
    private _inlinedCssClassNames;
    private _manifest;
    private _output?;
    private _paths;
    private _puppeteerOptions;
    private _root;
    private _useHistory;
    private _useManifest;
    constructor(args: BuildTimeRenderArguments);
    private _writeIndexHtml({html, script, path, styles});
    private _createScripts(path?);
    private _filterCss(classes);
    private _getRenderResult(page, path?, allContents?);
    apply(compiler: Compiler): void;
}
