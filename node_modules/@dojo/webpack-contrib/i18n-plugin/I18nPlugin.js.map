{"version":3,"file":"I18nPlugin.js","sourceRoot":"","sources":["I18nPlugin.ts"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable:interface-name */\nimport { deepAssign } from '@dojo/framework/core/util';\nimport { join } from 'path';\nimport { Compiler, DefinePlugin } from 'webpack';\nimport NormalModule = require('webpack/lib/NormalModule');\nimport InjectedModuleDependency from './dependencies/InjectedModuleDependency';\n\nconst basePath = process.cwd();\n\nexport interface I18nPluginOptions {\n\t/**\n\t * An optional list of CLDR JSON paths used to inject CLDR data into the application.\n\t */\n\tcldrPaths?: string[];\n\n\t/**\n\t * The default locale for the application or custom element.\n\t */\n\tdefaultLocale: string;\n\n\t/**\n\t * An optional list of supported locales beyond the default. When the application starts, this list\n\t * is checked for the user's locale. If found, then the locale is set to the user's locale. Otherwise,\n\t * the default locale is used.\n\t */\n\tsupportedLocales?: string[];\n\n\t/**\n\t * An optional entry point into which the i18n module should be injected. Defaults to 'src/main.ts'.\n\t * Since this is compared to the fully-resolved resource path, an extension should be used whenever\n\t * possible.\n\t */\n\ttarget?: string;\n}\n\n/**\n * @private\n * Create a regular expression from a string that can match a file path regardless of the path separator.\n *\n * @param path A file path\n *\n * @return A regular expression that matches a file path pattern\n */\nfunction createFilePathRegExp(path: string): RegExp {\n\tconst pattern = path.replace(/(\\/|\\\\)/g, '(\\\\\\\\|/)').replace(/\\./g, '\\\\.');\n\treturn new RegExp(pattern);\n}\n\n/**\n * A custom Webpack plugin that injects into the specified entry point a module responsible to setting the locale\n * and registering CLDR data.\n */\nexport default class I18nPlugin {\n\treadonly cldrPaths?: string[];\n\treadonly defaultLocale: string;\n\treadonly supportedLocales?: string[];\n\treadonly target: RegExp;\n\n\tconstructor({ cldrPaths, defaultLocale, supportedLocales, target = 'src/main.ts' }: I18nPluginOptions) {\n\t\tthis.cldrPaths = cldrPaths;\n\t\tthis.defaultLocale = defaultLocale;\n\t\tthis.supportedLocales = supportedLocales;\n\t\tthis.target = createFilePathRegExp(target);\n\t}\n\n\t/**\n\t * Inject a module that sets the locale and CLDR data for the bundled application or custom element.\n\t *\n\t * @param compiler The Webpack compiler\n\t */\n\tapply(compiler: Compiler) {\n\t\tconst { defaultLocale, supportedLocales = [] } = this;\n\n\t\tconst definePlugin = new DefinePlugin({\n\t\t\t__defaultLocale__: `'${defaultLocale}'`,\n\t\t\t__supportedLocales__: JSON.stringify(supportedLocales),\n\t\t\t__cldrData__: JSON.stringify(this._loadCldrData())\n\t\t});\n\t\tdefinePlugin.apply(compiler);\n\n\t\tcompiler.hooks.compilation.tap(this.constructor.name, (compilation, params) => {\n\t\t\tcompilation.dependencyFactories.set(InjectedModuleDependency as any, params.normalModuleFactory);\n\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\tInjectedModuleDependency as any,\n\t\t\t\t// `@types/webpack` defines `Compilation#dependencyTemplates` as `Map<typeof Dependency, Tapable>`,\n\t\t\t\t// which is incorrect. The templates used throughout webpack do *not* extend Tapable.\n\t\t\t\tnew InjectedModuleDependency.Template() as any\n\t\t\t);\n\n\t\t\tcompilation.hooks.succeedModule.tap(this.constructor.name, (module) => {\n\t\t\t\tif (this.target.test((module as NormalModule).resource)) {\n\t\t\t\t\tconst dep = new InjectedModuleDependency(join(__dirname, './templates/setLocaleData.js'));\n\t\t\t\t\t(module as NormalModule).addDependency(dep);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * @private\n\t * Load CLDR data from the provided mids and merge the data into a single object.\n\t *\n\t * @return The CLDR data object\n\t */\n\tprivate _loadCldrData() {\n\t\tif (!Array.isArray(this.cldrPaths) || !this.cldrPaths.length) {\n\t\t\treturn {};\n\t\t}\n\n\t\tconst { defaultLocale, supportedLocales = [] } = this;\n\t\tconst locales = [defaultLocale, ...supportedLocales];\n\n\t\treturn this.cldrPaths\n\t\t\t.map((url) => {\n\t\t\t\tif (url.charAt(0) === '.') {\n\t\t\t\t\turl = join(basePath, url);\n\t\t\t\t}\n\t\t\t\treturn locales.map((locale) => url.replace('{locale}', locale));\n\t\t\t})\n\t\t\t.reduce((left, right) => left.concat(right), [])\n\t\t\t.map((mid) => require(mid))\n\t\t\t.reduce((cldrData, source) => deepAssign(cldrData, source), Object.create(null));\n\t}\n}\n"]}