{"version":3,"file":"loader.js","sourceRoot":"","sources":["loader.ts"],"names":[],"mappings":"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","sourcesContent":["import getFeatures from './getFeatures';\nimport * as webpack from 'webpack';\nimport * as recast from 'recast';\nimport { ExpressionStatement, BaseNode } from 'estree';\n\nconst { getOptions } = require('loader-utils');\nconst types = recast.types;\nconst namedTypes = types.namedTypes;\nconst builders = types.builders;\nconst compose = require('recast/lib/util').composeSourceMaps;\nconst acorn = require('acorn-dynamic-import').default;\n\n/**\n * A map of features that should be statically replaced in the code\n */\nexport interface StaticHasFeatures {\n\t[feature: string]: boolean;\n}\n\nconst HAS_MID = /\\/has$/;\nconst HAS_PRAGMA = /^\\s*(!?)\\s*has\\s*\\([\"']([^'\"]+)['\"]\\)\\s*$/;\n\nfunction hasCheck(hasIdentifier: string, args: any, callee: any) {\n\treturn (\n\t\t(namedTypes.Identifier.check(callee) && callee.name === hasIdentifier && args.length === 1) ||\n\t\t(namedTypes.MemberExpression.check(callee) &&\n\t\t\tnamedTypes.Identifier.check(callee.object) &&\n\t\t\tcallee.object.name === hasIdentifier &&\n\t\t\tnamedTypes.Identifier.check(callee.property) &&\n\t\t\tcallee.property.name === 'default' &&\n\t\t\targs.length === 1)\n\t);\n}\n\nfunction getExpressionValue(node: ExpressionStatement): string | undefined {\n\tif (namedTypes.Literal.check(node.expression) && typeof node.expression.value === 'string') {\n\t\treturn node.expression.value;\n\t}\n\tif (namedTypes.TemplateLiteral.check(node.expression)) {\n\t\tif (\n\t\t\tnode.expression.quasis.length === 1 &&\n\t\t\tnamedTypes.TemplateElement.check(node.expression.quasis[0]) &&\n\t\t\ttypeof node.expression.quasis[0].value.raw === 'string'\n\t\t) {\n\t\t\treturn node.expression.quasis[0].value.raw;\n\t\t}\n\t}\n}\n\nfunction setComment<T>(\n\tnode: T,\n\tpath: recast.Path<T>,\n\tcomment: string,\n\tparentPath: recast.Path<BaseNode>,\n\tname: string,\n\treplacement: any = null\n) {\n\tconst next = (Array.isArray(parentPath.value) && parentPath.value[Number(name) + 1]) || parentPath.node;\n\tnext.comments = [...((node as any).comments || []), ...(next.comments || []), builders.commentLine(comment)];\n\tpath.replace(replacement);\n}\n\n/**\n * Checks code for usage of has pragmas or other calls to @dojo/framework/has and optimizes them out based on the flags or\n * feature sets specified statically. This loader should act on JavaScript, so it should run after the compiler\n * if using TypeScript\n * @param content The JavaScript code to optimize\n * @param sourceMap Optional Source map for the code. If provided it will be updated to reflect the optimizations made\n */\nexport default function loader(\n\tthis: webpack.loader.LoaderContext,\n\tcontent: string,\n\tsourceMap?: webpack.RawSourceMap\n): string | void {\n\tif (content.indexOf('/has') < 0 && content.indexOf('has(') < 0) {\n\t\tif (sourceMap) {\n\t\t\tthis.callback(null, content, sourceMap);\n\t\t\treturn;\n\t\t}\n\t\treturn content;\n\t}\n\t// copy features to a local scope, because `this` gets weird\n\tconst options = getOptions(this);\n\tconst { features: featuresOption } = options;\n\tconst parseOptions: any = {\n\t\tparser: {\n\t\t\tparse(source: string) {\n\t\t\t\treturn acorn.parse(source, {\n\t\t\t\t\tplugins: { dynamicImport: true },\n\t\t\t\t\tlocations: true,\n\t\t\t\t\tsourceType: 'module'\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\tif (sourceMap) {\n\t\tparseOptions.sourceFileName = sourceMap.file;\n\t}\n\tconst dynamicFlags = new Set<string>();\n\tconst ast = recast.parse(content, parseOptions);\n\tlet features: StaticHasFeatures;\n\tlet elideNextImport = false;\n\tlet hasIdentifier: string | undefined;\n\tlet comment: string | undefined;\n\tif (!featuresOption || Array.isArray(featuresOption) || typeof featuresOption === 'string') {\n\t\tfeatures = getFeatures(featuresOption);\n\t} else {\n\t\tfeatures = featuresOption;\n\t}\n\n\ttypes.visit(ast, {\n\t\tvisitExpressionStatement(path) {\n\t\t\tconst { node, parentPath, name } = path;\n\t\t\tconst expressionValue = getExpressionValue(node);\n\t\t\tif (expressionValue) {\n\t\t\t\tconst hasPragma = HAS_PRAGMA.exec(expressionValue);\n\t\t\t\tif (hasPragma) {\n\t\t\t\t\tconst [, negate, flag] = hasPragma;\n\t\t\t\t\tcomment = ` ${negate}has('${flag}')`;\n\t\t\t\t\tif (flag in features) {\n\t\t\t\t\t\telideNextImport = negate ? !!features[flag] : !features[flag];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tnamedTypes.CallExpression.check(node.expression) &&\n\t\t\t\tnamedTypes.Identifier.check(node.expression.callee)\n\t\t\t) {\n\t\t\t\tif (\n\t\t\t\t\tnode.expression.callee.name === 'require' &&\n\t\t\t\t\tnode.expression.arguments.length === 1 &&\n\t\t\t\t\telideNextImport === true\n\t\t\t\t) {\n\t\t\t\t\tconst [arg] = node.expression.arguments;\n\t\t\t\t\tif (namedTypes.Literal.check(arg)) {\n\t\t\t\t\t\tcomment = ` elided: import '${arg.value}'`;\n\t\t\t\t\t\telideNextImport = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (comment && parentPath && typeof name !== 'undefined') {\n\t\t\t\tsetComment(node, path, comment, parentPath, name);\n\t\t\t\tcomment = undefined;\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tcomment = undefined;\n\t\t\tthis.traverse(path);\n\t\t},\n\n\t\tvisitDeclaration(path) {\n\t\t\tconst { node, parentPath, name } = path;\n\t\t\tif (namedTypes.ImportDeclaration.check(path.node)) {\n\t\t\t\tconst value = path.node.source.value;\n\t\t\t\tconst specifier = path.node.specifiers[0];\n\n\t\t\t\tif (elideNextImport) {\n\t\t\t\t\tcomment = ` elided: import '${value}'`;\n\t\t\t\t\telideNextImport = false;\n\t\t\t\t}\n\t\t\t\tif (comment && parentPath && typeof name !== 'undefined') {\n\t\t\t\t\tlet replacement: any = null;\n\t\t\t\t\tif (path.node.specifiers.length) {\n\t\t\t\t\t\treplacement = builders.variableDeclaration(\n\t\t\t\t\t\t\t'var',\n\t\t\t\t\t\t\tpath.node.specifiers.map((specifier) => {\n\t\t\t\t\t\t\t\treturn builders.variableDeclarator(specifier.local, builders.identifier('undefined'));\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tsetComment(node, path, comment, parentPath, name, replacement);\n\t\t\t\t\tcomment = undefined;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tcomment = undefined;\n\n\t\t\t\tif (specifier && specifier.type === 'ImportDefaultSpecifier') {\n\t\t\t\t\tif (typeof value === 'string' && HAS_MID.test(value)) {\n\t\t\t\t\t\thasIdentifier = specifier.local.name;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.traverse(path);\n\t\t},\n\n\t\t// Look for `require('*/has');` and set the variable name to `hasIdentifier`\n\t\tvisitVariableDeclaration(path) {\n\t\t\tconst {\n\t\t\t\tname,\n\t\t\t\tnode,\n\t\t\t\tparentPath,\n\t\t\t\tparentPath: { node: parentNode },\n\t\t\t\tnode: { declarations }\n\t\t\t} = path;\n\n\t\t\tlet identifier: any = undefined;\n\n\t\t\tif (elideNextImport === true && declarations.length === 1) {\n\t\t\t\tconst callExpression = declarations[0];\n\t\t\t\tif (namedTypes.VariableDeclarator.check(callExpression)) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tcallExpression.init &&\n\t\t\t\t\t\tnamedTypes.CallExpression.check(callExpression.init) &&\n\t\t\t\t\t\tnamedTypes.Identifier.check(callExpression.init.callee)\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tcallExpression.init.callee.name === 'require' &&\n\t\t\t\t\t\t\tcallExpression.init.arguments.length === 1\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tif (callExpression.id) {\n\t\t\t\t\t\t\t\tidentifier = callExpression.id;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst [arg] = callExpression.init.arguments;\n\t\t\t\t\t\t\tif (namedTypes.Literal.check(arg)) {\n\t\t\t\t\t\t\t\tcomment = ` elided: import '${arg.value}'`;\n\t\t\t\t\t\t\t\telideNextImport = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (comment && parentPath && typeof name !== 'undefined') {\n\t\t\t\t\tconst replacement = builders.variableDeclaration('var', [\n\t\t\t\t\t\tbuilders.variableDeclarator(identifier, builders.identifier('undefined'))\n\t\t\t\t\t]);\n\t\t\t\t\tsetComment(node, path, comment, parentPath, name, replacement);\n\n\t\t\t\t\tcomment = undefined;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tcomment = undefined;\n\t\t\t}\n\n\t\t\t// Get all the top level variable declarations\n\t\t\tif (ast.program === parentNode && !hasIdentifier) {\n\t\t\t\tdeclarations.forEach(({ id, init }) => {\n\t\t\t\t\tif (!hasIdentifier) {\n\t\t\t\t\t\tif (namedTypes.Identifier.check(id) && init && namedTypes.CallExpression.check(init)) {\n\t\t\t\t\t\t\tconst { callee, arguments: args } = init;\n\t\t\t\t\t\t\tif (namedTypes.Identifier.check(callee) && callee.name === 'require' && args.length === 1) {\n\t\t\t\t\t\t\t\tconst [arg] = args;\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tnamedTypes.Literal.check(arg) &&\n\t\t\t\t\t\t\t\t\ttypeof arg.value === 'string' &&\n\t\t\t\t\t\t\t\t\tHAS_MID.test(arg.value)\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\thasIdentifier = id.name;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.traverse(path);\n\t\t}\n\t});\n\n\t// Now we want to walk the AST and find an expressions where the default import of `*/has` is\n\t// called. Which is a CallExpression, where the callee is an object named the import from above\n\t// accessing the `default` property, with one argument, which is a string literal.\n\tif (hasIdentifier) {\n\t\ttypes.visit(ast, {\n\t\t\tvisitCallExpression(path) {\n\t\t\t\tconst {\n\t\t\t\t\tnode: { arguments: args, callee }\n\t\t\t\t} = path;\n\t\t\t\tif (hasCheck(hasIdentifier as string, args, callee)) {\n\t\t\t\t\tconst [arg] = args;\n\t\t\t\t\tif (namedTypes.Literal.check(arg) && typeof arg.value === 'string') {\n\t\t\t\t\t\t// check to see if we have a flag that we want to statically swap\n\t\t\t\t\t\tif (arg.value in features) {\n\t\t\t\t\t\t\tpath.replace(builders.literal(features[arg.value]));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdynamicFlags.add(arg.value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tthis.traverse(path);\n\t\t\t}\n\t\t});\n\t}\n\n\tif (dynamicFlags.size > 0) {\n\t\tconsole.log();\n\t\tconsole.log('Dynamic features: ' + Array.from(dynamicFlags).join(', '));\n\t\tconsole.log();\n\t}\n\tif (sourceMap) {\n\t\tconst result = recast.print(ast, { sourceMapName: sourceMap.file });\n\t\tconst map = compose(\n\t\t\tsourceMap,\n\t\t\tresult.map\n\t\t);\n\t\tthis.callback(null, result.code, map);\n\t\treturn;\n\t}\n\treturn recast.print(ast).code;\n}\n"]}