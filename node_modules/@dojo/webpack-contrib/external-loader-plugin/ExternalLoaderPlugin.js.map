{"version":3,"file":"ExternalLoaderPlugin.js","sourceRoot":"","sources":["ExternalLoaderPlugin.ts"],"names":[],"mappings":"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","sourcesContent":["import { Compiler } from 'webpack';\nconst CopyWebpackPlugin = require('copy-webpack-plugin');\nconst HtmlWebpackIncludeAssetsPlugin = require('html-webpack-include-assets-plugin');\n\nexport type ExternalDescriptor = {\n\t/**\n\t * The path that will be used to load this module. This property is used to configure the build to defer to the\n\t * external loader.\n\t */\n\tname?: string;\n\t/**\n\t * If this is a boolean, it indicates whether to inject this dependency into the application. If inject is set to\n\t * true, this dependency should be a script or stylesheet. If this dependency is a directory and contains one or\n\t * more stylesheets or scripts that  should be injected into the application inject can be set to a string or array\n\t * of strings that point to the resource(s) to be injected. Only scripts and stylehseets can be injected.\n\t */\n\tinject?: boolean | string | string[];\n\n\t/**\n\t * Optional property to indicate how this external should be loaded\n\t */\n\ttype?: string;\n\n\t/**\n\t * This is used to specify the location, relative to the project root, from where the dependency should be copied.\n\t */\n\tfrom?: string;\n\n\t/**\n\t * This can be used to specify the location, relative to the externals folder, where the dependency should be copied.\n\t */\n\tto?: string;\n};\n\n/**\n * Describes an external dependency\n */\nexport type ExternalDep = string | ExternalDescriptor;\n\nexport interface ExternalLoaderOptions {\n\t/**\n\t * The external dependencies\n\t */\n\tdependencies: ExternalDep[];\n\n\t/**\n\t * Whether to use the build's hash to cache bust injected dependencies.\n\t *\n\t */\n\thash?: boolean;\n\n\t/**\n\t * Where to copy dependencies to; defaults to \"externals\"\n\t */\n\toutputPath?: string;\n\n\t/**\n\t * Used to modify where files are placed(e.g. an alternate location for testing)\n\t */\n\tpathPrefix?: string;\n}\n\nexport default class ExternalLoaderPlugin {\n\tprivate _dependencies: ExternalDep[];\n\tprivate _outputPath: string;\n\tprivate _pathPrefix: string;\n\tprivate _hash: boolean;\n\n\tconstructor({ dependencies, outputPath, pathPrefix, hash }: ExternalLoaderOptions) {\n\t\tthis._dependencies = dependencies;\n\t\tthis._outputPath = outputPath || 'externals';\n\t\tthis._hash = Boolean(hash);\n\t\tthis._pathPrefix = pathPrefix ? `${pathPrefix}/` : '';\n\t}\n\n\tapply(compiler: Compiler) {\n\t\tconst prefixPath = (path: string) => `${this._pathPrefix}${this._outputPath}/${path}`;\n\n\t\tconst toInject = this._dependencies.reduce(\n\t\t\t(assets, external) => {\n\t\t\t\tif (typeof external === 'string') {\n\t\t\t\t\treturn assets;\n\t\t\t\t}\n\n\t\t\t\tconst { inject, to, from } = external;\n\n\t\t\t\tif (!inject || !from) {\n\t\t\t\t\treturn assets;\n\t\t\t\t}\n\n\t\t\t\tconst base = to || from;\n\t\t\t\tconst baseDir = base[base.length - 1] === '/' ? base : `${base}/`;\n\n\t\t\t\tif (Array.isArray(inject)) {\n\t\t\t\t\treturn assets.concat(inject.map((path) => prefixPath(`${baseDir}${path}`)));\n\t\t\t\t}\n\n\t\t\t\treturn assets.concat(prefixPath(typeof inject === 'string' ? `${baseDir}${inject}` : base));\n\t\t\t},\n\t\t\t[] as string[]\n\t\t);\n\n\t\tconst copyPlugin = new CopyWebpackPlugin(\n\t\t\tthis._dependencies.reduce(\n\t\t\t\t(config, dependency) =>\n\t\t\t\t\ttypeof dependency === 'string' || !dependency.from\n\t\t\t\t\t\t? config\n\t\t\t\t\t\t: config.concat([\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tfrom: `${dependency.from}`,\n\t\t\t\t\t\t\t\t\tto: prefixPath(dependency.to || dependency.from)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t  ]),\n\t\t\t\t[] as { from: string; to: string; transform?: Function }[]\n\t\t\t)\n\t\t);\n\n\t\tconst htmlPlugin = new HtmlWebpackIncludeAssetsPlugin({\n\t\t\tassets: toInject,\n\t\t\tappend: false,\n\t\t\tfiles: `${this._pathPrefix}index.html`,\n\t\t\thash: this._hash\n\t\t});\n\n\t\tcopyPlugin.apply(compiler);\n\t\thtmlPlugin.apply(compiler);\n\t}\n}\n"]}