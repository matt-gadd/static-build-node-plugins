{"version":3,"file":"eject.js","sourceRoot":"","sources":["eject.ts"],"names":[],"mappings":";;AACA,yBAAyB;AACzB,yBAAyB;AACzB,6BAA6B;AAE7B;;;;;;;GAOG;AACH,2BAA2B,GAAW;IACrC,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,SAAS,CAAC,CAAC;IACnD,EAAE,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC3B,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;QACvD,MAAM,MAAM,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;QAC7B,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;QAC7C,MAAM,CAAC,MAAM,CAAC;IACf,CAAC;IACD,MAAM,CAAC,EAAE,CAAC;AACX,CAAC;AAED;;;;;;;GAOG;AACH,0BAAiC,GAAW;IAC3C,MAAM,MAAM,GAAG,EAAE,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IAC3D,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,oBAAoB,CAAC,CAAC;IACtD,MAAM,EAAE,GAAG,iBAAiB,CAAC,GAAG,CAAC,CAAC;IAClC,EAAE,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5C,MAAM,CAAC,KAAK,CAAC;AACd,CAAC;AAND,4CAMC","sourcesContent":["import { Config } from '@dojo/cli/interfaces';\nimport * as fs from 'fs';\nimport * as os from 'os';\nimport * as path from 'path';\n\n/**\n * @private\n * Clear the rc data for the specified key (e.g., \"build-app\") from the dojorc and return\n * the cleared data.\n *\n * @param key The rc key\n * @return The cleared data\n */\nfunction clearBuildOptions(key: string): Config {\n\tconst rcPath = path.join(process.cwd(), '.dojorc');\n\tif (fs.existsSync(rcPath)) {\n\t\tconst rc = JSON.parse(fs.readFileSync(rcPath, 'utf8'));\n\t\tconst config = rc[key] || {};\n\t\trc[key] = {};\n\t\tfs.writeFileSync(rcPath, JSON.stringify(rc));\n\t\treturn config;\n\t}\n\treturn {};\n}\n\n/**\n * Extract the rc data for the provided key to a temporary file and remove it from the dojorc.\n * This utility is necessary given that \"eject\" is treated as a full command (see\n * https://github.com/dojo/cli/issues/192 for more details).\n *\n * @param key The rc key (e.g., \"build-app\")\n * @return The path to the temporary file\n */\nexport function moveBuildOptions(key: string): string {\n\tconst tmpDir = fs.mkdtempSync(`${os.tmpdir()}${path.sep}`);\n\tconst tmpRc = path.join(tmpDir, 'build-options.json');\n\tconst rc = clearBuildOptions(key);\n\tfs.writeFileSync(tmpRc, JSON.stringify(rc));\n\treturn tmpRc;\n}\n"]}